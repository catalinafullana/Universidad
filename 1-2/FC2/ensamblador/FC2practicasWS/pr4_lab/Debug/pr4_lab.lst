
pr4_lab.elf:     file format elf32-littleriscv
pr4_lab.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00001194

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x000011c8 memsz 0x000011c8 flags r-x
    LOAD off    0x00003000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x0000083c memsz 0x00000878 flags rw-

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .text             00000f50  00000000  00000000  00001000  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text.swap        0000004c  00000f50  00000f50  00001f50  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text.bubbleSort  00000100  00000f9c  00000f9c  00001f9c  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .text.test        000000f8  0000109c  0000109c  0000209c  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.main        00000034  00001194  00001194  00002194  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .data             00000830  00010000  00010000  00003000  2**3  CONTENTS, ALLOC, LOAD, DATA
  6 .sdata            0000000c  00010830  00010830  00003830  2**2  CONTENTS, ALLOC, LOAD, DATA
  7 .bss              00000028  0001083c  0001083c  0000383c  2**2  ALLOC
  8 .sbss             00000014  00010864  00010864  0000383c  2**2  ALLOC
  9 .debug_info       0000027a  00000000  00000000  0000383c  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev     0000016d  00000000  00000000  00003ab6  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_aranges    00000040  00000000  00000000  00003c23  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_ranges     00000060  00000000  00000000  00003c63  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_macro      000006f9  00000000  00000000  00003cc3  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line       000002d3  00000000  00000000  000043bc  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str        0000244e  00000000  00000000  0000468f  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .comment          00000012  00000000  00000000  00006add  2**0  CONTENTS, READONLY
 17 .riscv.attributes 00000021  00000000  00000000  00006aef  2**0  CONTENTS, READONLY
 18 .debug_frame      000000d4  00000000  00000000  00006b10  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000f50 l    d  .text.swap	00000000 .text.swap
00000f9c l    d  .text.bubbleSort	00000000 .text.bubbleSort
0000109c l    d  .text.test	00000000 .text.test
00001194 l    d  .text.main	00000000 .text.main
00010000 l    d  .data	00000000 .data
00010830 l    d  .sdata	00000000 .sdata
0001083c l    d  .bss	00000000 .bss
00010864 l    d  .sbss	00000000 .sbss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 calloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sys_sbrk.c
00010874 l     O .sbss	00000004 heap_end.0
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 pr4_lab.c
00000000 l    df *ABS*	00000000 impure.c
00010000 l     O .data	00000428 impure_data
00000980 g     F .text	00000004 __malloc_unlock
00000f44 g     F .text	0000000c __errno
00010870 g     O .sbss	00000004 errno
00000f50 g     F .text.swap	0000004c swap
000000c8 g     F .text	00000010 malloc
0001086c g     O .sbss	00000004 __malloc_top_pad
000009f0 g     F .text	00000060 _sbrk_r
00010868 g     O .sbss	00000004 __malloc_max_sbrked_mem
00000ea4 g     F .text	000000a0 _sbrk
00000000 g     F .text	00000018 calloc
00000b90 g     F .text	00000314 _free_r
0000109c g     F .text.test	000000f8 test
00010834 g     O .sdata	00000004 __malloc_sbrk_base
00000998 g     F .text	00000058 rand
0001083c g     O .bss	00000028 __malloc_current_mallinfo
00010428 g     O .data	00000408 __malloc_av_
0000097c g     F .text	00000004 __malloc_lock
00000018 g     F .text	000000b0 _calloc_r
000008a0 g     F .text	000000dc memset
00001194 g     F .text.main	00000034 main
00010864 g     O .sbss	00000004 __malloc_max_total_mem
00000984 g     F .text	00000014 srand
000000e8 g     F .text	000007b8 _malloc_r
00000f9c g     F .text.bubbleSort	00000100 bubbleSort
00000a50 g     F .text	00000140 _malloc_trim_r
00010830 g     O .sdata	00000004 _impure_ptr
00010838 g     O .sdata	00000004 __malloc_trim_threshold
000000d8 g     F .text	00000010 free



Disassembly of section .text:

00000000 <calloc>:
calloc():
   0:	00011737          	lui	a4,0x11
   4:	00050793          	mv	a5,a0
   8:	83072503          	lw	a0,-2000(a4) # 10830 <_impure_ptr>
   c:	00058613          	mv	a2,a1
  10:	00078593          	mv	a1,a5
  14:	0040006f          	j	18 <_calloc_r>

00000018 <_calloc_r>:
_calloc_r():
  18:	02c585b3          	mul	a1,a1,a2
  1c:	ff010113          	addi	sp,sp,-16
  20:	00812423          	sw	s0,8(sp)
  24:	00112623          	sw	ra,12(sp)
  28:	0c0000ef          	jal	ra,e8 <_malloc_r>
  2c:	00050413          	mv	s0,a0
  30:	02050863          	beqz	a0,60 <_calloc_r+0x48>
  34:	ffc52603          	lw	a2,-4(a0)
  38:	02400713          	li	a4,36
  3c:	ffc67613          	andi	a2,a2,-4
  40:	ffc60613          	addi	a2,a2,-4
  44:	06c76063          	bltu	a4,a2,a4 <_calloc_r+0x8c>
  48:	01300693          	li	a3,19
  4c:	00050793          	mv	a5,a0
  50:	02c6e263          	bltu	a3,a2,74 <_calloc_r+0x5c>
  54:	0007a023          	sw	zero,0(a5)
  58:	0007a223          	sw	zero,4(a5)
  5c:	0007a423          	sw	zero,8(a5)
  60:	00c12083          	lw	ra,12(sp)
  64:	00040513          	mv	a0,s0
  68:	00812403          	lw	s0,8(sp)
  6c:	01010113          	addi	sp,sp,16
  70:	00008067          	ret
  74:	00052023          	sw	zero,0(a0)
  78:	00052223          	sw	zero,4(a0)
  7c:	01b00793          	li	a5,27
  80:	04c7f063          	bgeu	a5,a2,c0 <_calloc_r+0xa8>
  84:	00052423          	sw	zero,8(a0)
  88:	00052623          	sw	zero,12(a0)
  8c:	01050793          	addi	a5,a0,16
  90:	fce612e3          	bne	a2,a4,54 <_calloc_r+0x3c>
  94:	00052823          	sw	zero,16(a0)
  98:	01850793          	addi	a5,a0,24
  9c:	00052a23          	sw	zero,20(a0)
  a0:	fb5ff06f          	j	54 <_calloc_r+0x3c>
  a4:	00000593          	li	a1,0
  a8:	7f8000ef          	jal	ra,8a0 <memset>
  ac:	00c12083          	lw	ra,12(sp)
  b0:	00040513          	mv	a0,s0
  b4:	00812403          	lw	s0,8(sp)
  b8:	01010113          	addi	sp,sp,16
  bc:	00008067          	ret
  c0:	00850793          	addi	a5,a0,8
  c4:	f91ff06f          	j	54 <_calloc_r+0x3c>

000000c8 <malloc>:
malloc():
  c8:	000117b7          	lui	a5,0x11
  cc:	00050593          	mv	a1,a0
  d0:	8307a503          	lw	a0,-2000(a5) # 10830 <_impure_ptr>
  d4:	0140006f          	j	e8 <_malloc_r>

000000d8 <free>:
free():
  d8:	000117b7          	lui	a5,0x11
  dc:	00050593          	mv	a1,a0
  e0:	8307a503          	lw	a0,-2000(a5) # 10830 <_impure_ptr>
  e4:	2ad0006f          	j	b90 <_free_r>

000000e8 <_malloc_r>:
_malloc_r():
  e8:	fd010113          	addi	sp,sp,-48
  ec:	01312e23          	sw	s3,28(sp)
  f0:	02112623          	sw	ra,44(sp)
  f4:	02812423          	sw	s0,40(sp)
  f8:	02912223          	sw	s1,36(sp)
  fc:	03212023          	sw	s2,32(sp)
 100:	01412c23          	sw	s4,24(sp)
 104:	01512a23          	sw	s5,20(sp)
 108:	01612823          	sw	s6,16(sp)
 10c:	01712623          	sw	s7,12(sp)
 110:	01812423          	sw	s8,8(sp)
 114:	01912223          	sw	s9,4(sp)
 118:	00b58793          	addi	a5,a1,11
 11c:	01600713          	li	a4,22
 120:	00050993          	mv	s3,a0
 124:	06f76663          	bltu	a4,a5,190 <_malloc_r+0xa8>
 128:	01000793          	li	a5,16
 12c:	1eb7e663          	bltu	a5,a1,318 <_malloc_r+0x230>
 130:	04d000ef          	jal	ra,97c <__malloc_lock>
 134:	01000493          	li	s1,16
 138:	01800793          	li	a5,24
 13c:	00200613          	li	a2,2
 140:	00010937          	lui	s2,0x10
 144:	42890913          	addi	s2,s2,1064 # 10428 <__malloc_av_>
 148:	00f907b3          	add	a5,s2,a5
 14c:	0047a403          	lw	s0,4(a5)
 150:	ff878713          	addi	a4,a5,-8
 154:	20e40a63          	beq	s0,a4,368 <_malloc_r+0x280>
 158:	00442783          	lw	a5,4(s0)
 15c:	00c42683          	lw	a3,12(s0)
 160:	00842603          	lw	a2,8(s0)
 164:	ffc7f793          	andi	a5,a5,-4
 168:	00f407b3          	add	a5,s0,a5
 16c:	0047a703          	lw	a4,4(a5)
 170:	00d62623          	sw	a3,12(a2)
 174:	00c6a423          	sw	a2,8(a3)
 178:	00176713          	ori	a4,a4,1
 17c:	00098513          	mv	a0,s3
 180:	00e7a223          	sw	a4,4(a5)
 184:	7fc000ef          	jal	ra,980 <__malloc_unlock>
 188:	00840513          	addi	a0,s0,8
 18c:	1980006f          	j	324 <_malloc_r+0x23c>
 190:	ff87f493          	andi	s1,a5,-8
 194:	1807c263          	bltz	a5,318 <_malloc_r+0x230>
 198:	18b4e063          	bltu	s1,a1,318 <_malloc_r+0x230>
 19c:	7e0000ef          	jal	ra,97c <__malloc_lock>
 1a0:	1f700793          	li	a5,503
 1a4:	4697f663          	bgeu	a5,s1,610 <_malloc_r+0x528>
 1a8:	0094d793          	srli	a5,s1,0x9
 1ac:	1a078663          	beqz	a5,358 <_malloc_r+0x270>
 1b0:	00400713          	li	a4,4
 1b4:	3cf76c63          	bltu	a4,a5,58c <_malloc_r+0x4a4>
 1b8:	0064d793          	srli	a5,s1,0x6
 1bc:	03978613          	addi	a2,a5,57
 1c0:	03878513          	addi	a0,a5,56
 1c4:	00361693          	slli	a3,a2,0x3
 1c8:	00010937          	lui	s2,0x10
 1cc:	42890913          	addi	s2,s2,1064 # 10428 <__malloc_av_>
 1d0:	00d906b3          	add	a3,s2,a3
 1d4:	0046a403          	lw	s0,4(a3)
 1d8:	ff868693          	addi	a3,a3,-8
 1dc:	02868663          	beq	a3,s0,208 <_malloc_r+0x120>
 1e0:	00f00593          	li	a1,15
 1e4:	0100006f          	j	1f4 <_malloc_r+0x10c>
 1e8:	32075c63          	bgez	a4,520 <_malloc_r+0x438>
 1ec:	00c42403          	lw	s0,12(s0)
 1f0:	00868c63          	beq	a3,s0,208 <_malloc_r+0x120>
 1f4:	00442783          	lw	a5,4(s0)
 1f8:	ffc7f793          	andi	a5,a5,-4
 1fc:	40978733          	sub	a4,a5,s1
 200:	fee5d4e3          	bge	a1,a4,1e8 <_malloc_r+0x100>
 204:	00050613          	mv	a2,a0
 208:	01092403          	lw	s0,16(s2)
 20c:	00890893          	addi	a7,s2,8
 210:	17140863          	beq	s0,a7,380 <_malloc_r+0x298>
 214:	00442503          	lw	a0,4(s0)
 218:	00f00693          	li	a3,15
 21c:	ffc57513          	andi	a0,a0,-4
 220:	409507b3          	sub	a5,a0,s1
 224:	40f6cc63          	blt	a3,a5,63c <_malloc_r+0x554>
 228:	01192a23          	sw	a7,20(s2)
 22c:	01192823          	sw	a7,16(s2)
 230:	3e07d663          	bgez	a5,61c <_malloc_r+0x534>
 234:	1ff00793          	li	a5,511
 238:	2ea7ea63          	bltu	a5,a0,52c <_malloc_r+0x444>
 23c:	ff857793          	andi	a5,a0,-8
 240:	00878793          	addi	a5,a5,8
 244:	00492583          	lw	a1,4(s2)
 248:	00f907b3          	add	a5,s2,a5
 24c:	0007a683          	lw	a3,0(a5)
 250:	00555513          	srli	a0,a0,0x5
 254:	00100713          	li	a4,1
 258:	00a71733          	sll	a4,a4,a0
 25c:	00b76733          	or	a4,a4,a1
 260:	ff878593          	addi	a1,a5,-8
 264:	00b42623          	sw	a1,12(s0)
 268:	00d42423          	sw	a3,8(s0)
 26c:	00e92223          	sw	a4,4(s2)
 270:	0087a023          	sw	s0,0(a5)
 274:	0086a623          	sw	s0,12(a3)
 278:	40265793          	srai	a5,a2,0x2
 27c:	00100593          	li	a1,1
 280:	00f595b3          	sll	a1,a1,a5
 284:	10b76863          	bltu	a4,a1,394 <_malloc_r+0x2ac>
 288:	00e5f7b3          	and	a5,a1,a4
 28c:	02079463          	bnez	a5,2b4 <_malloc_r+0x1cc>
 290:	00159593          	slli	a1,a1,0x1
 294:	ffc67613          	andi	a2,a2,-4
 298:	00e5f7b3          	and	a5,a1,a4
 29c:	00460613          	addi	a2,a2,4
 2a0:	00079a63          	bnez	a5,2b4 <_malloc_r+0x1cc>
 2a4:	00159593          	slli	a1,a1,0x1
 2a8:	00e5f7b3          	and	a5,a1,a4
 2ac:	00460613          	addi	a2,a2,4
 2b0:	fe078ae3          	beqz	a5,2a4 <_malloc_r+0x1bc>
 2b4:	00f00813          	li	a6,15
 2b8:	00361313          	slli	t1,a2,0x3
 2bc:	00690333          	add	t1,s2,t1
 2c0:	00030513          	mv	a0,t1
 2c4:	00c52783          	lw	a5,12(a0)
 2c8:	00060e13          	mv	t3,a2
 2cc:	2ef50263          	beq	a0,a5,5b0 <_malloc_r+0x4c8>
 2d0:	0047a703          	lw	a4,4(a5)
 2d4:	00078413          	mv	s0,a5
 2d8:	00c7a783          	lw	a5,12(a5)
 2dc:	ffc77713          	andi	a4,a4,-4
 2e0:	409706b3          	sub	a3,a4,s1
 2e4:	2ed84263          	blt	a6,a3,5c8 <_malloc_r+0x4e0>
 2e8:	fe06c2e3          	bltz	a3,2cc <_malloc_r+0x1e4>
 2ec:	00e40733          	add	a4,s0,a4
 2f0:	00472683          	lw	a3,4(a4)
 2f4:	00842603          	lw	a2,8(s0)
 2f8:	00098513          	mv	a0,s3
 2fc:	0016e693          	ori	a3,a3,1
 300:	00d72223          	sw	a3,4(a4)
 304:	00f62623          	sw	a5,12(a2)
 308:	00c7a423          	sw	a2,8(a5)
 30c:	674000ef          	jal	ra,980 <__malloc_unlock>
 310:	00840513          	addi	a0,s0,8
 314:	0100006f          	j	324 <_malloc_r+0x23c>
 318:	00c00793          	li	a5,12
 31c:	00f9a023          	sw	a5,0(s3)
 320:	00000513          	li	a0,0
 324:	02c12083          	lw	ra,44(sp)
 328:	02812403          	lw	s0,40(sp)
 32c:	02412483          	lw	s1,36(sp)
 330:	02012903          	lw	s2,32(sp)
 334:	01c12983          	lw	s3,28(sp)
 338:	01812a03          	lw	s4,24(sp)
 33c:	01412a83          	lw	s5,20(sp)
 340:	01012b03          	lw	s6,16(sp)
 344:	00c12b83          	lw	s7,12(sp)
 348:	00812c03          	lw	s8,8(sp)
 34c:	00412c83          	lw	s9,4(sp)
 350:	03010113          	addi	sp,sp,48
 354:	00008067          	ret
 358:	20000693          	li	a3,512
 35c:	04000613          	li	a2,64
 360:	03f00513          	li	a0,63
 364:	e65ff06f          	j	1c8 <_malloc_r+0xe0>
 368:	00c7a403          	lw	s0,12(a5)
 36c:	00260613          	addi	a2,a2,2
 370:	de8794e3          	bne	a5,s0,158 <_malloc_r+0x70>
 374:	01092403          	lw	s0,16(s2)
 378:	00890893          	addi	a7,s2,8
 37c:	e9141ce3          	bne	s0,a7,214 <_malloc_r+0x12c>
 380:	00492703          	lw	a4,4(s2)
 384:	40265793          	srai	a5,a2,0x2
 388:	00100593          	li	a1,1
 38c:	00f595b3          	sll	a1,a1,a5
 390:	eeb77ce3          	bgeu	a4,a1,288 <_malloc_r+0x1a0>
 394:	00892403          	lw	s0,8(s2)
 398:	00442a83          	lw	s5,4(s0)
 39c:	ffcafb13          	andi	s6,s5,-4
 3a0:	009b6863          	bltu	s6,s1,3b0 <_malloc_r+0x2c8>
 3a4:	409b07b3          	sub	a5,s6,s1
 3a8:	00f00713          	li	a4,15
 3ac:	14f74663          	blt	a4,a5,4f8 <_malloc_r+0x410>
 3b0:	000117b7          	lui	a5,0x11
 3b4:	00011cb7          	lui	s9,0x11
 3b8:	86c7aa83          	lw	s5,-1940(a5) # 1086c <__malloc_top_pad>
 3bc:	834ca703          	lw	a4,-1996(s9) # 10834 <__malloc_sbrk_base>
 3c0:	fff00793          	li	a5,-1
 3c4:	01640a33          	add	s4,s0,s6
 3c8:	01548ab3          	add	s5,s1,s5
 3cc:	34f70a63          	beq	a4,a5,720 <_malloc_r+0x638>
 3d0:	000017b7          	lui	a5,0x1
 3d4:	00f78793          	addi	a5,a5,15 # 100f <bubbleSort+0x73>
 3d8:	00fa8ab3          	add	s5,s5,a5
 3dc:	fffff7b7          	lui	a5,0xfffff
 3e0:	00fafab3          	and	s5,s5,a5
 3e4:	000a8593          	mv	a1,s5
 3e8:	00098513          	mv	a0,s3
 3ec:	604000ef          	jal	ra,9f0 <_sbrk_r>
 3f0:	fff00793          	li	a5,-1
 3f4:	00050b93          	mv	s7,a0
 3f8:	28f50c63          	beq	a0,a5,690 <_malloc_r+0x5a8>
 3fc:	29456863          	bltu	a0,s4,68c <_malloc_r+0x5a4>
 400:	00011c37          	lui	s8,0x11
 404:	83cc0c13          	addi	s8,s8,-1988 # 1083c <__malloc_current_mallinfo>
 408:	000c2583          	lw	a1,0(s8)
 40c:	00ba85b3          	add	a1,s5,a1
 410:	00bc2023          	sw	a1,0(s8)
 414:	00058793          	mv	a5,a1
 418:	3aaa0463          	beq	s4,a0,7c0 <_malloc_r+0x6d8>
 41c:	834ca683          	lw	a3,-1996(s9)
 420:	fff00713          	li	a4,-1
 424:	3ae68c63          	beq	a3,a4,7dc <_malloc_r+0x6f4>
 428:	414b8a33          	sub	s4,s7,s4
 42c:	00fa07b3          	add	a5,s4,a5
 430:	00fc2023          	sw	a5,0(s8)
 434:	007bfc93          	andi	s9,s7,7
 438:	300c8663          	beqz	s9,744 <_malloc_r+0x65c>
 43c:	000017b7          	lui	a5,0x1
 440:	419b8bb3          	sub	s7,s7,s9
 444:	00878593          	addi	a1,a5,8 # 1008 <bubbleSort+0x6c>
 448:	008b8b93          	addi	s7,s7,8
 44c:	419585b3          	sub	a1,a1,s9
 450:	015b8ab3          	add	s5,s7,s5
 454:	fff78793          	addi	a5,a5,-1
 458:	415585b3          	sub	a1,a1,s5
 45c:	00f5fa33          	and	s4,a1,a5
 460:	000a0593          	mv	a1,s4
 464:	00098513          	mv	a0,s3
 468:	588000ef          	jal	ra,9f0 <_sbrk_r>
 46c:	fff00793          	li	a5,-1
 470:	3cf50063          	beq	a0,a5,830 <_malloc_r+0x748>
 474:	41750533          	sub	a0,a0,s7
 478:	01450ab3          	add	s5,a0,s4
 47c:	000c2583          	lw	a1,0(s8)
 480:	01792423          	sw	s7,8(s2)
 484:	001aea93          	ori	s5,s5,1
 488:	00ba05b3          	add	a1,s4,a1
 48c:	00bc2023          	sw	a1,0(s8)
 490:	015ba223          	sw	s5,4(s7)
 494:	35240863          	beq	s0,s2,7e4 <_malloc_r+0x6fc>
 498:	00f00693          	li	a3,15
 49c:	3566f863          	bgeu	a3,s6,7ec <_malloc_r+0x704>
 4a0:	00442703          	lw	a4,4(s0)
 4a4:	ff4b0793          	addi	a5,s6,-12
 4a8:	ff87f793          	andi	a5,a5,-8
 4ac:	00177713          	andi	a4,a4,1
 4b0:	00f76733          	or	a4,a4,a5
 4b4:	00e42223          	sw	a4,4(s0)
 4b8:	00500613          	li	a2,5
 4bc:	00f40733          	add	a4,s0,a5
 4c0:	00c72223          	sw	a2,4(a4)
 4c4:	00c72423          	sw	a2,8(a4)
 4c8:	36f6ee63          	bltu	a3,a5,844 <_malloc_r+0x75c>
 4cc:	004baa83          	lw	s5,4(s7)
 4d0:	000b8413          	mv	s0,s7
 4d4:	000117b7          	lui	a5,0x11
 4d8:	8687a703          	lw	a4,-1944(a5) # 10868 <__malloc_max_sbrked_mem>
 4dc:	00b77463          	bgeu	a4,a1,4e4 <_malloc_r+0x3fc>
 4e0:	86b7a423          	sw	a1,-1944(a5)
 4e4:	000117b7          	lui	a5,0x11
 4e8:	8647a703          	lw	a4,-1948(a5) # 10864 <__malloc_max_total_mem>
 4ec:	1ab77663          	bgeu	a4,a1,698 <_malloc_r+0x5b0>
 4f0:	86b7a223          	sw	a1,-1948(a5)
 4f4:	1a40006f          	j	698 <_malloc_r+0x5b0>
 4f8:	0014e713          	ori	a4,s1,1
 4fc:	00e42223          	sw	a4,4(s0)
 500:	009404b3          	add	s1,s0,s1
 504:	00992423          	sw	s1,8(s2)
 508:	0017e793          	ori	a5,a5,1
 50c:	00098513          	mv	a0,s3
 510:	00f4a223          	sw	a5,4(s1)
 514:	46c000ef          	jal	ra,980 <__malloc_unlock>
 518:	00840513          	addi	a0,s0,8
 51c:	e09ff06f          	j	324 <_malloc_r+0x23c>
 520:	00c42683          	lw	a3,12(s0)
 524:	00842603          	lw	a2,8(s0)
 528:	c41ff06f          	j	168 <_malloc_r+0x80>
 52c:	00955793          	srli	a5,a0,0x9
 530:	00400713          	li	a4,4
 534:	14f77263          	bgeu	a4,a5,678 <_malloc_r+0x590>
 538:	01400713          	li	a4,20
 53c:	22f76a63          	bltu	a4,a5,770 <_malloc_r+0x688>
 540:	05c78693          	addi	a3,a5,92
 544:	05b78593          	addi	a1,a5,91
 548:	00369693          	slli	a3,a3,0x3
 54c:	00d906b3          	add	a3,s2,a3
 550:	0006a783          	lw	a5,0(a3)
 554:	ff868693          	addi	a3,a3,-8
 558:	1cf68863          	beq	a3,a5,728 <_malloc_r+0x640>
 55c:	0047a703          	lw	a4,4(a5)
 560:	ffc77713          	andi	a4,a4,-4
 564:	00e57663          	bgeu	a0,a4,570 <_malloc_r+0x488>
 568:	0087a783          	lw	a5,8(a5)
 56c:	fef698e3          	bne	a3,a5,55c <_malloc_r+0x474>
 570:	00c7a683          	lw	a3,12(a5)
 574:	00492703          	lw	a4,4(s2)
 578:	00d42623          	sw	a3,12(s0)
 57c:	00f42423          	sw	a5,8(s0)
 580:	0086a423          	sw	s0,8(a3)
 584:	0087a623          	sw	s0,12(a5)
 588:	cf1ff06f          	j	278 <_malloc_r+0x190>
 58c:	01400713          	li	a4,20
 590:	12f77663          	bgeu	a4,a5,6bc <_malloc_r+0x5d4>
 594:	05400713          	li	a4,84
 598:	1ef76a63          	bltu	a4,a5,78c <_malloc_r+0x6a4>
 59c:	00c4d793          	srli	a5,s1,0xc
 5a0:	06f78613          	addi	a2,a5,111
 5a4:	06e78513          	addi	a0,a5,110
 5a8:	00361693          	slli	a3,a2,0x3
 5ac:	c1dff06f          	j	1c8 <_malloc_r+0xe0>
 5b0:	001e0e13          	addi	t3,t3,1
 5b4:	003e7793          	andi	a5,t3,3
 5b8:	00850513          	addi	a0,a0,8
 5bc:	10078e63          	beqz	a5,6d8 <_malloc_r+0x5f0>
 5c0:	00c52783          	lw	a5,12(a0)
 5c4:	d09ff06f          	j	2cc <_malloc_r+0x1e4>
 5c8:	00842603          	lw	a2,8(s0)
 5cc:	0014e593          	ori	a1,s1,1
 5d0:	00b42223          	sw	a1,4(s0)
 5d4:	00f62623          	sw	a5,12(a2)
 5d8:	00c7a423          	sw	a2,8(a5)
 5dc:	009404b3          	add	s1,s0,s1
 5e0:	00992a23          	sw	s1,20(s2)
 5e4:	00992823          	sw	s1,16(s2)
 5e8:	0016e793          	ori	a5,a3,1
 5ec:	0114a623          	sw	a7,12(s1)
 5f0:	0114a423          	sw	a7,8(s1)
 5f4:	00f4a223          	sw	a5,4(s1)
 5f8:	00e40733          	add	a4,s0,a4
 5fc:	00098513          	mv	a0,s3
 600:	00d72023          	sw	a3,0(a4)
 604:	37c000ef          	jal	ra,980 <__malloc_unlock>
 608:	00840513          	addi	a0,s0,8
 60c:	d19ff06f          	j	324 <_malloc_r+0x23c>
 610:	0034d613          	srli	a2,s1,0x3
 614:	00848793          	addi	a5,s1,8
 618:	b29ff06f          	j	140 <_malloc_r+0x58>
 61c:	00a40733          	add	a4,s0,a0
 620:	00472783          	lw	a5,4(a4)
 624:	00098513          	mv	a0,s3
 628:	0017e793          	ori	a5,a5,1
 62c:	00f72223          	sw	a5,4(a4)
 630:	350000ef          	jal	ra,980 <__malloc_unlock>
 634:	00840513          	addi	a0,s0,8
 638:	cedff06f          	j	324 <_malloc_r+0x23c>
 63c:	0014e713          	ori	a4,s1,1
 640:	00e42223          	sw	a4,4(s0)
 644:	009404b3          	add	s1,s0,s1
 648:	00992a23          	sw	s1,20(s2)
 64c:	00992823          	sw	s1,16(s2)
 650:	0017e713          	ori	a4,a5,1
 654:	0114a623          	sw	a7,12(s1)
 658:	0114a423          	sw	a7,8(s1)
 65c:	00e4a223          	sw	a4,4(s1)
 660:	00a40533          	add	a0,s0,a0
 664:	00f52023          	sw	a5,0(a0)
 668:	00098513          	mv	a0,s3
 66c:	314000ef          	jal	ra,980 <__malloc_unlock>
 670:	00840513          	addi	a0,s0,8
 674:	cb1ff06f          	j	324 <_malloc_r+0x23c>
 678:	00655793          	srli	a5,a0,0x6
 67c:	03978693          	addi	a3,a5,57
 680:	03878593          	addi	a1,a5,56
 684:	00369693          	slli	a3,a3,0x3
 688:	ec5ff06f          	j	54c <_malloc_r+0x464>
 68c:	11240e63          	beq	s0,s2,7a8 <_malloc_r+0x6c0>
 690:	00892403          	lw	s0,8(s2)
 694:	00442a83          	lw	s5,4(s0)
 698:	ffcafa93          	andi	s5,s5,-4
 69c:	409a87b3          	sub	a5,s5,s1
 6a0:	009ae663          	bltu	s5,s1,6ac <_malloc_r+0x5c4>
 6a4:	00f00713          	li	a4,15
 6a8:	e4f748e3          	blt	a4,a5,4f8 <_malloc_r+0x410>
 6ac:	00098513          	mv	a0,s3
 6b0:	2d0000ef          	jal	ra,980 <__malloc_unlock>
 6b4:	00000513          	li	a0,0
 6b8:	c6dff06f          	j	324 <_malloc_r+0x23c>
 6bc:	05c78613          	addi	a2,a5,92
 6c0:	05b78513          	addi	a0,a5,91
 6c4:	00361693          	slli	a3,a2,0x3
 6c8:	b01ff06f          	j	1c8 <_malloc_r+0xe0>
 6cc:	00832783          	lw	a5,8(t1)
 6d0:	fff60613          	addi	a2,a2,-1
 6d4:	1c679263          	bne	a5,t1,898 <_malloc_r+0x7b0>
 6d8:	00367793          	andi	a5,a2,3
 6dc:	ff830313          	addi	t1,t1,-8
 6e0:	fe0796e3          	bnez	a5,6cc <_malloc_r+0x5e4>
 6e4:	00492703          	lw	a4,4(s2)
 6e8:	fff5c793          	not	a5,a1
 6ec:	00e7f7b3          	and	a5,a5,a4
 6f0:	00f92223          	sw	a5,4(s2)
 6f4:	00159593          	slli	a1,a1,0x1
 6f8:	c8b7eee3          	bltu	a5,a1,394 <_malloc_r+0x2ac>
 6fc:	c8058ce3          	beqz	a1,394 <_malloc_r+0x2ac>
 700:	00f5f733          	and	a4,a1,a5
 704:	00071a63          	bnez	a4,718 <_malloc_r+0x630>
 708:	00159593          	slli	a1,a1,0x1
 70c:	00f5f733          	and	a4,a1,a5
 710:	004e0e13          	addi	t3,t3,4
 714:	fe070ae3          	beqz	a4,708 <_malloc_r+0x620>
 718:	000e0613          	mv	a2,t3
 71c:	b9dff06f          	j	2b8 <_malloc_r+0x1d0>
 720:	010a8a93          	addi	s5,s5,16
 724:	cc1ff06f          	j	3e4 <_malloc_r+0x2fc>
 728:	00492503          	lw	a0,4(s2)
 72c:	4025d593          	srai	a1,a1,0x2
 730:	00100713          	li	a4,1
 734:	00b71733          	sll	a4,a4,a1
 738:	00a76733          	or	a4,a4,a0
 73c:	00e92223          	sw	a4,4(s2)
 740:	e39ff06f          	j	578 <_malloc_r+0x490>
 744:	015b85b3          	add	a1,s7,s5
 748:	40b005b3          	neg	a1,a1
 74c:	01459593          	slli	a1,a1,0x14
 750:	0145da13          	srli	s4,a1,0x14
 754:	000a0593          	mv	a1,s4
 758:	00098513          	mv	a0,s3
 75c:	294000ef          	jal	ra,9f0 <_sbrk_r>
 760:	fff00793          	li	a5,-1
 764:	d0f518e3          	bne	a0,a5,474 <_malloc_r+0x38c>
 768:	00000a13          	li	s4,0
 76c:	d11ff06f          	j	47c <_malloc_r+0x394>
 770:	05400713          	li	a4,84
 774:	08f76263          	bltu	a4,a5,7f8 <_malloc_r+0x710>
 778:	00c55793          	srli	a5,a0,0xc
 77c:	06f78693          	addi	a3,a5,111
 780:	06e78593          	addi	a1,a5,110
 784:	00369693          	slli	a3,a3,0x3
 788:	dc5ff06f          	j	54c <_malloc_r+0x464>
 78c:	15400713          	li	a4,340
 790:	08f76263          	bltu	a4,a5,814 <_malloc_r+0x72c>
 794:	00f4d793          	srli	a5,s1,0xf
 798:	07878613          	addi	a2,a5,120
 79c:	07778513          	addi	a0,a5,119
 7a0:	00361693          	slli	a3,a2,0x3
 7a4:	a25ff06f          	j	1c8 <_malloc_r+0xe0>
 7a8:	00011c37          	lui	s8,0x11
 7ac:	83cc0c13          	addi	s8,s8,-1988 # 1083c <__malloc_current_mallinfo>
 7b0:	000c2783          	lw	a5,0(s8)
 7b4:	00fa87b3          	add	a5,s5,a5
 7b8:	00fc2023          	sw	a5,0(s8)
 7bc:	c61ff06f          	j	41c <_malloc_r+0x334>
 7c0:	014a1713          	slli	a4,s4,0x14
 7c4:	c4071ce3          	bnez	a4,41c <_malloc_r+0x334>
 7c8:	00892403          	lw	s0,8(s2)
 7cc:	015b0ab3          	add	s5,s6,s5
 7d0:	001aea93          	ori	s5,s5,1
 7d4:	01542223          	sw	s5,4(s0)
 7d8:	cfdff06f          	j	4d4 <_malloc_r+0x3ec>
 7dc:	837caa23          	sw	s7,-1996(s9)
 7e0:	c55ff06f          	j	434 <_malloc_r+0x34c>
 7e4:	000b8413          	mv	s0,s7
 7e8:	cedff06f          	j	4d4 <_malloc_r+0x3ec>
 7ec:	00100793          	li	a5,1
 7f0:	00fba223          	sw	a5,4(s7)
 7f4:	eb9ff06f          	j	6ac <_malloc_r+0x5c4>
 7f8:	15400713          	li	a4,340
 7fc:	06f76263          	bltu	a4,a5,860 <_malloc_r+0x778>
 800:	00f55793          	srli	a5,a0,0xf
 804:	07878693          	addi	a3,a5,120
 808:	07778593          	addi	a1,a5,119
 80c:	00369693          	slli	a3,a3,0x3
 810:	d3dff06f          	j	54c <_malloc_r+0x464>
 814:	55400713          	li	a4,1364
 818:	06f76263          	bltu	a4,a5,87c <_malloc_r+0x794>
 81c:	0124d793          	srli	a5,s1,0x12
 820:	07d78613          	addi	a2,a5,125
 824:	07c78513          	addi	a0,a5,124
 828:	00361693          	slli	a3,a2,0x3
 82c:	99dff06f          	j	1c8 <_malloc_r+0xe0>
 830:	ff8c8c93          	addi	s9,s9,-8
 834:	019a8ab3          	add	s5,s5,s9
 838:	417a8ab3          	sub	s5,s5,s7
 83c:	00000a13          	li	s4,0
 840:	c3dff06f          	j	47c <_malloc_r+0x394>
 844:	00840593          	addi	a1,s0,8
 848:	00098513          	mv	a0,s3
 84c:	344000ef          	jal	ra,b90 <_free_r>
 850:	00892403          	lw	s0,8(s2)
 854:	000c2583          	lw	a1,0(s8)
 858:	00442a83          	lw	s5,4(s0)
 85c:	c79ff06f          	j	4d4 <_malloc_r+0x3ec>
 860:	55400713          	li	a4,1364
 864:	02f76463          	bltu	a4,a5,88c <_malloc_r+0x7a4>
 868:	01255793          	srli	a5,a0,0x12
 86c:	07d78693          	addi	a3,a5,125
 870:	07c78593          	addi	a1,a5,124
 874:	00369693          	slli	a3,a3,0x3
 878:	cd5ff06f          	j	54c <_malloc_r+0x464>
 87c:	3f800693          	li	a3,1016
 880:	07f00613          	li	a2,127
 884:	07e00513          	li	a0,126
 888:	941ff06f          	j	1c8 <_malloc_r+0xe0>
 88c:	3f800693          	li	a3,1016
 890:	07e00593          	li	a1,126
 894:	cb9ff06f          	j	54c <_malloc_r+0x464>
 898:	00492783          	lw	a5,4(s2)
 89c:	e59ff06f          	j	6f4 <_malloc_r+0x60c>

000008a0 <memset>:
memset():
 8a0:	00f00313          	li	t1,15
 8a4:	00050713          	mv	a4,a0
 8a8:	02c37e63          	bgeu	t1,a2,8e4 <memset+0x44>
 8ac:	00f77793          	andi	a5,a4,15
 8b0:	0a079063          	bnez	a5,950 <memset+0xb0>
 8b4:	08059263          	bnez	a1,938 <memset+0x98>
 8b8:	ff067693          	andi	a3,a2,-16
 8bc:	00f67613          	andi	a2,a2,15
 8c0:	00e686b3          	add	a3,a3,a4
 8c4:	00b72023          	sw	a1,0(a4)
 8c8:	00b72223          	sw	a1,4(a4)
 8cc:	00b72423          	sw	a1,8(a4)
 8d0:	00b72623          	sw	a1,12(a4)
 8d4:	01070713          	addi	a4,a4,16
 8d8:	fed766e3          	bltu	a4,a3,8c4 <memset+0x24>
 8dc:	00061463          	bnez	a2,8e4 <memset+0x44>
 8e0:	00008067          	ret
 8e4:	40c306b3          	sub	a3,t1,a2
 8e8:	00269693          	slli	a3,a3,0x2
 8ec:	00000297          	auipc	t0,0x0
 8f0:	005686b3          	add	a3,a3,t0
 8f4:	00c68067          	jr	12(a3)
 8f8:	00b70723          	sb	a1,14(a4)
 8fc:	00b706a3          	sb	a1,13(a4)
 900:	00b70623          	sb	a1,12(a4)
 904:	00b705a3          	sb	a1,11(a4)
 908:	00b70523          	sb	a1,10(a4)
 90c:	00b704a3          	sb	a1,9(a4)
 910:	00b70423          	sb	a1,8(a4)
 914:	00b703a3          	sb	a1,7(a4)
 918:	00b70323          	sb	a1,6(a4)
 91c:	00b702a3          	sb	a1,5(a4)
 920:	00b70223          	sb	a1,4(a4)
 924:	00b701a3          	sb	a1,3(a4)
 928:	00b70123          	sb	a1,2(a4)
 92c:	00b700a3          	sb	a1,1(a4)
 930:	00b70023          	sb	a1,0(a4)
 934:	00008067          	ret
 938:	0ff5f593          	andi	a1,a1,255
 93c:	00859693          	slli	a3,a1,0x8
 940:	00d5e5b3          	or	a1,a1,a3
 944:	01059693          	slli	a3,a1,0x10
 948:	00d5e5b3          	or	a1,a1,a3
 94c:	f6dff06f          	j	8b8 <memset+0x18>
 950:	00279693          	slli	a3,a5,0x2
 954:	00000297          	auipc	t0,0x0
 958:	005686b3          	add	a3,a3,t0
 95c:	00008293          	mv	t0,ra
 960:	fa0680e7          	jalr	-96(a3)
 964:	00028093          	mv	ra,t0
 968:	ff078793          	addi	a5,a5,-16
 96c:	40f70733          	sub	a4,a4,a5
 970:	00f60633          	add	a2,a2,a5
 974:	f6c378e3          	bgeu	t1,a2,8e4 <memset+0x44>
 978:	f3dff06f          	j	8b4 <memset+0x14>

0000097c <__malloc_lock>:
__malloc_lock():
 97c:	00008067          	ret

00000980 <__malloc_unlock>:
__malloc_unlock():
 980:	00008067          	ret

00000984 <srand>:
srand():
 984:	000117b7          	lui	a5,0x11
 988:	8307a783          	lw	a5,-2000(a5) # 10830 <_impure_ptr>
 98c:	0aa7a423          	sw	a0,168(a5)
 990:	0a07a623          	sw	zero,172(a5)
 994:	00008067          	ret

00000998 <rand>:
rand():
 998:	000117b7          	lui	a5,0x11
 99c:	8307a803          	lw	a6,-2000(a5) # 10830 <_impure_ptr>
 9a0:	4c9585b7          	lui	a1,0x4c958
 9a4:	f2d58593          	addi	a1,a1,-211 # 4c957f2d <heap_end.0+0x4c9476b9>
 9a8:	0a882683          	lw	a3,168(a6)
 9ac:	0ac82703          	lw	a4,172(a6)
 9b0:	02b687b3          	mul	a5,a3,a1
 9b4:	00178613          	addi	a2,a5,1
 9b8:	00f637b3          	sltu	a5,a2,a5
 9bc:	0ac82423          	sw	a2,168(a6)
 9c0:	5851f637          	lui	a2,0x5851f
 9c4:	42d60613          	addi	a2,a2,1069 # 5851f42d <heap_end.0+0x5850ebb9>
 9c8:	02c68633          	mul	a2,a3,a2
 9cc:	02b70733          	mul	a4,a4,a1
 9d0:	02b6b6b3          	mulhu	a3,a3,a1
 9d4:	00c70733          	add	a4,a4,a2
 9d8:	00d70733          	add	a4,a4,a3
 9dc:	00e787b3          	add	a5,a5,a4
 9e0:	00179513          	slli	a0,a5,0x1
 9e4:	0af82623          	sw	a5,172(a6)
 9e8:	00155513          	srli	a0,a0,0x1
 9ec:	00008067          	ret

000009f0 <_sbrk_r>:
_sbrk_r():
 9f0:	ff010113          	addi	sp,sp,-16
 9f4:	00812423          	sw	s0,8(sp)
 9f8:	00912223          	sw	s1,4(sp)
 9fc:	00050413          	mv	s0,a0
 a00:	000114b7          	lui	s1,0x11
 a04:	00058513          	mv	a0,a1
 a08:	00112623          	sw	ra,12(sp)
 a0c:	8604a823          	sw	zero,-1936(s1) # 10870 <errno>
 a10:	494000ef          	jal	ra,ea4 <_sbrk>
 a14:	fff00793          	li	a5,-1
 a18:	00f50c63          	beq	a0,a5,a30 <_sbrk_r+0x40>
 a1c:	00c12083          	lw	ra,12(sp)
 a20:	00812403          	lw	s0,8(sp)
 a24:	00412483          	lw	s1,4(sp)
 a28:	01010113          	addi	sp,sp,16
 a2c:	00008067          	ret
 a30:	8704a783          	lw	a5,-1936(s1)
 a34:	fe0784e3          	beqz	a5,a1c <_sbrk_r+0x2c>
 a38:	00c12083          	lw	ra,12(sp)
 a3c:	00f42023          	sw	a5,0(s0)
 a40:	00812403          	lw	s0,8(sp)
 a44:	00412483          	lw	s1,4(sp)
 a48:	01010113          	addi	sp,sp,16
 a4c:	00008067          	ret

00000a50 <_malloc_trim_r>:
_malloc_trim_r():
 a50:	fe010113          	addi	sp,sp,-32
 a54:	01312623          	sw	s3,12(sp)
 a58:	000109b7          	lui	s3,0x10
 a5c:	00812c23          	sw	s0,24(sp)
 a60:	00912a23          	sw	s1,20(sp)
 a64:	01212823          	sw	s2,16(sp)
 a68:	01412423          	sw	s4,8(sp)
 a6c:	00112e23          	sw	ra,28(sp)
 a70:	00058a13          	mv	s4,a1
 a74:	00050913          	mv	s2,a0
 a78:	42898993          	addi	s3,s3,1064 # 10428 <__malloc_av_>
 a7c:	f01ff0ef          	jal	ra,97c <__malloc_lock>
 a80:	0089a703          	lw	a4,8(s3)
 a84:	000017b7          	lui	a5,0x1
 a88:	fef78413          	addi	s0,a5,-17 # fef <bubbleSort+0x53>
 a8c:	00472483          	lw	s1,4(a4)
 a90:	41440433          	sub	s0,s0,s4
 a94:	ffc4f493          	andi	s1,s1,-4
 a98:	00940433          	add	s0,s0,s1
 a9c:	00c45413          	srli	s0,s0,0xc
 aa0:	fff40413          	addi	s0,s0,-1
 aa4:	00c41413          	slli	s0,s0,0xc
 aa8:	00f44e63          	blt	s0,a5,ac4 <_malloc_trim_r+0x74>
 aac:	00000593          	li	a1,0
 ab0:	00090513          	mv	a0,s2
 ab4:	f3dff0ef          	jal	ra,9f0 <_sbrk_r>
 ab8:	0089a783          	lw	a5,8(s3)
 abc:	009787b3          	add	a5,a5,s1
 ac0:	02f50863          	beq	a0,a5,af0 <_malloc_trim_r+0xa0>
 ac4:	00090513          	mv	a0,s2
 ac8:	eb9ff0ef          	jal	ra,980 <__malloc_unlock>
 acc:	01c12083          	lw	ra,28(sp)
 ad0:	01812403          	lw	s0,24(sp)
 ad4:	01412483          	lw	s1,20(sp)
 ad8:	01012903          	lw	s2,16(sp)
 adc:	00c12983          	lw	s3,12(sp)
 ae0:	00812a03          	lw	s4,8(sp)
 ae4:	00000513          	li	a0,0
 ae8:	02010113          	addi	sp,sp,32
 aec:	00008067          	ret
 af0:	408005b3          	neg	a1,s0
 af4:	00090513          	mv	a0,s2
 af8:	ef9ff0ef          	jal	ra,9f0 <_sbrk_r>
 afc:	fff00793          	li	a5,-1
 b00:	04f50a63          	beq	a0,a5,b54 <_malloc_trim_r+0x104>
 b04:	000117b7          	lui	a5,0x11
 b08:	83c78793          	addi	a5,a5,-1988 # 1083c <__malloc_current_mallinfo>
 b0c:	0007a703          	lw	a4,0(a5)
 b10:	0089a683          	lw	a3,8(s3)
 b14:	408484b3          	sub	s1,s1,s0
 b18:	0014e493          	ori	s1,s1,1
 b1c:	40870433          	sub	s0,a4,s0
 b20:	00090513          	mv	a0,s2
 b24:	0096a223          	sw	s1,4(a3)
 b28:	0087a023          	sw	s0,0(a5)
 b2c:	e55ff0ef          	jal	ra,980 <__malloc_unlock>
 b30:	01c12083          	lw	ra,28(sp)
 b34:	01812403          	lw	s0,24(sp)
 b38:	01412483          	lw	s1,20(sp)
 b3c:	01012903          	lw	s2,16(sp)
 b40:	00c12983          	lw	s3,12(sp)
 b44:	00812a03          	lw	s4,8(sp)
 b48:	00100513          	li	a0,1
 b4c:	02010113          	addi	sp,sp,32
 b50:	00008067          	ret
 b54:	00000593          	li	a1,0
 b58:	00090513          	mv	a0,s2
 b5c:	e95ff0ef          	jal	ra,9f0 <_sbrk_r>
 b60:	0089a703          	lw	a4,8(s3)
 b64:	00f00693          	li	a3,15
 b68:	40e507b3          	sub	a5,a0,a4
 b6c:	f4f6dce3          	bge	a3,a5,ac4 <_malloc_trim_r+0x74>
 b70:	000116b7          	lui	a3,0x11
 b74:	8346a683          	lw	a3,-1996(a3) # 10834 <__malloc_sbrk_base>
 b78:	0017e793          	ori	a5,a5,1
 b7c:	00f72223          	sw	a5,4(a4)
 b80:	40d50533          	sub	a0,a0,a3
 b84:	000116b7          	lui	a3,0x11
 b88:	82a6ae23          	sw	a0,-1988(a3) # 1083c <__malloc_current_mallinfo>
 b8c:	f39ff06f          	j	ac4 <_malloc_trim_r+0x74>

00000b90 <_free_r>:
_free_r():
 b90:	12058a63          	beqz	a1,cc4 <_free_r+0x134>
 b94:	ff010113          	addi	sp,sp,-16
 b98:	00812423          	sw	s0,8(sp)
 b9c:	00912223          	sw	s1,4(sp)
 ba0:	00058413          	mv	s0,a1
 ba4:	00050493          	mv	s1,a0
 ba8:	00112623          	sw	ra,12(sp)
 bac:	dd1ff0ef          	jal	ra,97c <__malloc_lock>
 bb0:	ffc42803          	lw	a6,-4(s0)
 bb4:	ff840713          	addi	a4,s0,-8
 bb8:	000105b7          	lui	a1,0x10
 bbc:	ffe87793          	andi	a5,a6,-2
 bc0:	00f70633          	add	a2,a4,a5
 bc4:	42858593          	addi	a1,a1,1064 # 10428 <__malloc_av_>
 bc8:	00462683          	lw	a3,4(a2)
 bcc:	0085a503          	lw	a0,8(a1)
 bd0:	ffc6f693          	andi	a3,a3,-4
 bd4:	1ac50a63          	beq	a0,a2,d88 <_free_r+0x1f8>
 bd8:	00d62223          	sw	a3,4(a2)
 bdc:	00187813          	andi	a6,a6,1
 be0:	00d60533          	add	a0,a2,a3
 be4:	0a081063          	bnez	a6,c84 <_free_r+0xf4>
 be8:	ff842303          	lw	t1,-8(s0)
 bec:	00452803          	lw	a6,4(a0)
 bf0:	00010537          	lui	a0,0x10
 bf4:	40670733          	sub	a4,a4,t1
 bf8:	00872883          	lw	a7,8(a4)
 bfc:	43050513          	addi	a0,a0,1072 # 10430 <__malloc_av_+0x8>
 c00:	006787b3          	add	a5,a5,t1
 c04:	00187813          	andi	a6,a6,1
 c08:	14a88063          	beq	a7,a0,d48 <_free_r+0x1b8>
 c0c:	00c72303          	lw	t1,12(a4)
 c10:	0068a623          	sw	t1,12(a7)
 c14:	01132423          	sw	a7,8(t1)
 c18:	1e080463          	beqz	a6,e00 <_free_r+0x270>
 c1c:	0017e693          	ori	a3,a5,1
 c20:	00d72223          	sw	a3,4(a4)
 c24:	00f62023          	sw	a5,0(a2)
 c28:	1ff00693          	li	a3,511
 c2c:	0af6e863          	bltu	a3,a5,cdc <_free_r+0x14c>
 c30:	ff87f693          	andi	a3,a5,-8
 c34:	00868693          	addi	a3,a3,8
 c38:	0045a503          	lw	a0,4(a1)
 c3c:	00d586b3          	add	a3,a1,a3
 c40:	0006a603          	lw	a2,0(a3)
 c44:	0057d813          	srli	a6,a5,0x5
 c48:	00100793          	li	a5,1
 c4c:	010797b3          	sll	a5,a5,a6
 c50:	00a7e7b3          	or	a5,a5,a0
 c54:	ff868513          	addi	a0,a3,-8
 c58:	00a72623          	sw	a0,12(a4)
 c5c:	00c72423          	sw	a2,8(a4)
 c60:	00f5a223          	sw	a5,4(a1)
 c64:	00e6a023          	sw	a4,0(a3)
 c68:	00e62623          	sw	a4,12(a2)
 c6c:	00812403          	lw	s0,8(sp)
 c70:	00c12083          	lw	ra,12(sp)
 c74:	00048513          	mv	a0,s1
 c78:	00412483          	lw	s1,4(sp)
 c7c:	01010113          	addi	sp,sp,16
 c80:	d01ff06f          	j	980 <__malloc_unlock>
 c84:	00452503          	lw	a0,4(a0)
 c88:	00157513          	andi	a0,a0,1
 c8c:	02051e63          	bnez	a0,cc8 <_free_r+0x138>
 c90:	00010537          	lui	a0,0x10
 c94:	00d787b3          	add	a5,a5,a3
 c98:	43050513          	addi	a0,a0,1072 # 10430 <__malloc_av_+0x8>
 c9c:	00862683          	lw	a3,8(a2)
 ca0:	0017e893          	ori	a7,a5,1
 ca4:	00f70833          	add	a6,a4,a5
 ca8:	16a68863          	beq	a3,a0,e18 <_free_r+0x288>
 cac:	00c62603          	lw	a2,12(a2)
 cb0:	00c6a623          	sw	a2,12(a3)
 cb4:	00d62423          	sw	a3,8(a2)
 cb8:	01172223          	sw	a7,4(a4)
 cbc:	00f82023          	sw	a5,0(a6)
 cc0:	f69ff06f          	j	c28 <_free_r+0x98>
 cc4:	00008067          	ret
 cc8:	0017e693          	ori	a3,a5,1
 ccc:	fed42e23          	sw	a3,-4(s0)
 cd0:	00f62023          	sw	a5,0(a2)
 cd4:	1ff00693          	li	a3,511
 cd8:	f4f6fce3          	bgeu	a3,a5,c30 <_free_r+0xa0>
 cdc:	0097d693          	srli	a3,a5,0x9
 ce0:	00400613          	li	a2,4
 ce4:	0ed66c63          	bltu	a2,a3,ddc <_free_r+0x24c>
 ce8:	0067d693          	srli	a3,a5,0x6
 cec:	03968813          	addi	a6,a3,57
 cf0:	03868613          	addi	a2,a3,56
 cf4:	00381813          	slli	a6,a6,0x3
 cf8:	01058833          	add	a6,a1,a6
 cfc:	00082683          	lw	a3,0(a6)
 d00:	ff880813          	addi	a6,a6,-8
 d04:	12d80863          	beq	a6,a3,e34 <_free_r+0x2a4>
 d08:	0046a603          	lw	a2,4(a3)
 d0c:	ffc67613          	andi	a2,a2,-4
 d10:	00c7f663          	bgeu	a5,a2,d1c <_free_r+0x18c>
 d14:	0086a683          	lw	a3,8(a3)
 d18:	fed818e3          	bne	a6,a3,d08 <_free_r+0x178>
 d1c:	00c6a803          	lw	a6,12(a3)
 d20:	01072623          	sw	a6,12(a4)
 d24:	00d72423          	sw	a3,8(a4)
 d28:	00812403          	lw	s0,8(sp)
 d2c:	00c12083          	lw	ra,12(sp)
 d30:	00e82423          	sw	a4,8(a6)
 d34:	00048513          	mv	a0,s1
 d38:	00412483          	lw	s1,4(sp)
 d3c:	00e6a623          	sw	a4,12(a3)
 d40:	01010113          	addi	sp,sp,16
 d44:	c3dff06f          	j	980 <__malloc_unlock>
 d48:	14081663          	bnez	a6,e94 <_free_r+0x304>
 d4c:	00c62583          	lw	a1,12(a2)
 d50:	00862603          	lw	a2,8(a2)
 d54:	00f687b3          	add	a5,a3,a5
 d58:	00812403          	lw	s0,8(sp)
 d5c:	00b62623          	sw	a1,12(a2)
 d60:	00c5a423          	sw	a2,8(a1)
 d64:	0017e693          	ori	a3,a5,1
 d68:	00c12083          	lw	ra,12(sp)
 d6c:	00d72223          	sw	a3,4(a4)
 d70:	00048513          	mv	a0,s1
 d74:	00f70733          	add	a4,a4,a5
 d78:	00412483          	lw	s1,4(sp)
 d7c:	00f72023          	sw	a5,0(a4)
 d80:	01010113          	addi	sp,sp,16
 d84:	bfdff06f          	j	980 <__malloc_unlock>
 d88:	00187813          	andi	a6,a6,1
 d8c:	00d787b3          	add	a5,a5,a3
 d90:	02081063          	bnez	a6,db0 <_free_r+0x220>
 d94:	ff842503          	lw	a0,-8(s0)
 d98:	40a70733          	sub	a4,a4,a0
 d9c:	00c72683          	lw	a3,12(a4)
 da0:	00872603          	lw	a2,8(a4)
 da4:	00a787b3          	add	a5,a5,a0
 da8:	00d62623          	sw	a3,12(a2)
 dac:	00c6a423          	sw	a2,8(a3)
 db0:	000116b7          	lui	a3,0x11
 db4:	0017e613          	ori	a2,a5,1
 db8:	8386a683          	lw	a3,-1992(a3) # 10838 <__malloc_trim_threshold>
 dbc:	00c72223          	sw	a2,4(a4)
 dc0:	00e5a423          	sw	a4,8(a1)
 dc4:	ead7e4e3          	bltu	a5,a3,c6c <_free_r+0xdc>
 dc8:	000117b7          	lui	a5,0x11
 dcc:	86c7a583          	lw	a1,-1940(a5) # 1086c <__malloc_top_pad>
 dd0:	00048513          	mv	a0,s1
 dd4:	c7dff0ef          	jal	ra,a50 <_malloc_trim_r>
 dd8:	e95ff06f          	j	c6c <_free_r+0xdc>
 ddc:	01400613          	li	a2,20
 de0:	02d67463          	bgeu	a2,a3,e08 <_free_r+0x278>
 de4:	05400613          	li	a2,84
 de8:	06d66463          	bltu	a2,a3,e50 <_free_r+0x2c0>
 dec:	00c7d693          	srli	a3,a5,0xc
 df0:	06f68813          	addi	a6,a3,111
 df4:	06e68613          	addi	a2,a3,110
 df8:	00381813          	slli	a6,a6,0x3
 dfc:	efdff06f          	j	cf8 <_free_r+0x168>
 e00:	00d787b3          	add	a5,a5,a3
 e04:	e99ff06f          	j	c9c <_free_r+0x10c>
 e08:	05c68813          	addi	a6,a3,92
 e0c:	05b68613          	addi	a2,a3,91
 e10:	00381813          	slli	a6,a6,0x3
 e14:	ee5ff06f          	j	cf8 <_free_r+0x168>
 e18:	00e5aa23          	sw	a4,20(a1)
 e1c:	00e5a823          	sw	a4,16(a1)
 e20:	00a72623          	sw	a0,12(a4)
 e24:	00a72423          	sw	a0,8(a4)
 e28:	01172223          	sw	a7,4(a4)
 e2c:	00f82023          	sw	a5,0(a6)
 e30:	e3dff06f          	j	c6c <_free_r+0xdc>
 e34:	0045a503          	lw	a0,4(a1)
 e38:	40265613          	srai	a2,a2,0x2
 e3c:	00100793          	li	a5,1
 e40:	00c79633          	sll	a2,a5,a2
 e44:	00a66633          	or	a2,a2,a0
 e48:	00c5a223          	sw	a2,4(a1)
 e4c:	ed5ff06f          	j	d20 <_free_r+0x190>
 e50:	15400613          	li	a2,340
 e54:	00d66c63          	bltu	a2,a3,e6c <_free_r+0x2dc>
 e58:	00f7d693          	srli	a3,a5,0xf
 e5c:	07868813          	addi	a6,a3,120
 e60:	07768613          	addi	a2,a3,119
 e64:	00381813          	slli	a6,a6,0x3
 e68:	e91ff06f          	j	cf8 <_free_r+0x168>
 e6c:	55400613          	li	a2,1364
 e70:	00d66c63          	bltu	a2,a3,e88 <_free_r+0x2f8>
 e74:	0127d693          	srli	a3,a5,0x12
 e78:	07d68813          	addi	a6,a3,125
 e7c:	07c68613          	addi	a2,a3,124
 e80:	00381813          	slli	a6,a6,0x3
 e84:	e75ff06f          	j	cf8 <_free_r+0x168>
 e88:	3f800813          	li	a6,1016
 e8c:	07e00613          	li	a2,126
 e90:	e69ff06f          	j	cf8 <_free_r+0x168>
 e94:	0017e693          	ori	a3,a5,1
 e98:	00d72223          	sw	a3,4(a4)
 e9c:	00f62023          	sw	a5,0(a2)
 ea0:	dcdff06f          	j	c6c <_free_r+0xdc>

00000ea4 <_sbrk>:
_sbrk():
 ea4:	00011337          	lui	t1,0x11
 ea8:	87432783          	lw	a5,-1932(t1) # 10874 <heap_end.0>
 eac:	ff010113          	addi	sp,sp,-16
 eb0:	00112623          	sw	ra,12(sp)
 eb4:	00050813          	mv	a6,a0
 eb8:	02079863          	bnez	a5,ee8 <_sbrk+0x44>
 ebc:	00000513          	li	a0,0
 ec0:	00000593          	li	a1,0
 ec4:	00000613          	li	a2,0
 ec8:	00000693          	li	a3,0
 ecc:	00000713          	li	a4,0
 ed0:	0d600893          	li	a7,214
 ed4:	00000073          	ecall
 ed8:	fff00713          	li	a4,-1
 edc:	00050793          	mv	a5,a0
 ee0:	04e50463          	beq	a0,a4,f28 <_sbrk+0x84>
 ee4:	86a32a23          	sw	a0,-1932(t1)
 ee8:	00f80533          	add	a0,a6,a5
 eec:	00000593          	li	a1,0
 ef0:	00000613          	li	a2,0
 ef4:	00000693          	li	a3,0
 ef8:	00000713          	li	a4,0
 efc:	00000793          	li	a5,0
 f00:	0d600893          	li	a7,214
 f04:	00000073          	ecall
 f08:	87432783          	lw	a5,-1932(t1)
 f0c:	00f80833          	add	a6,a6,a5
 f10:	01051c63          	bne	a0,a6,f28 <_sbrk+0x84>
 f14:	00c12083          	lw	ra,12(sp)
 f18:	86a32a23          	sw	a0,-1932(t1)
 f1c:	00078513          	mv	a0,a5
 f20:	01010113          	addi	sp,sp,16
 f24:	00008067          	ret
 f28:	01c000ef          	jal	ra,f44 <__errno>
 f2c:	00c12083          	lw	ra,12(sp)
 f30:	00c00793          	li	a5,12
 f34:	00f52023          	sw	a5,0(a0)
 f38:	fff00513          	li	a0,-1
 f3c:	01010113          	addi	sp,sp,16
 f40:	00008067          	ret

00000f44 <__errno>:
__errno():
 f44:	000117b7          	lui	a5,0x11
 f48:	8307a503          	lw	a0,-2000(a5) # 10830 <_impure_ptr>
 f4c:	00008067          	ret

Disassembly of section .text.swap:

00000f50 <swap>:
swap():
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:29
 * Swap two values by using pointer
 * @param first first pointer of first number
 * @param second second pointer of second number
 */
void swap(int *first, int *second)
{
 f50:	fd010113          	addi	sp,sp,-48
 f54:	02812623          	sw	s0,44(sp)
 f58:	03010413          	addi	s0,sp,48
 f5c:	fca42e23          	sw	a0,-36(s0)
 f60:	fcb42c23          	sw	a1,-40(s0)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:30
    int temp = *first;
 f64:	fdc42783          	lw	a5,-36(s0)
 f68:	0007a783          	lw	a5,0(a5)
 f6c:	fef42623          	sw	a5,-20(s0)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:31
    *first = *second;
 f70:	fd842783          	lw	a5,-40(s0)
 f74:	0007a703          	lw	a4,0(a5)
 f78:	fdc42783          	lw	a5,-36(s0)
 f7c:	00e7a023          	sw	a4,0(a5)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:32
    *second = temp;
 f80:	fd842783          	lw	a5,-40(s0)
 f84:	fec42703          	lw	a4,-20(s0)
 f88:	00e7a023          	sw	a4,0(a5)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:33
}
 f8c:	00000013          	nop
 f90:	02c12403          	lw	s0,44(sp)
 f94:	03010113          	addi	sp,sp,48
 f98:	00008067          	ret

Disassembly of section .text.bubbleSort:

00000f9c <bubbleSort>:
bubbleSort():
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:41
 * Bubble sort algorithm implementation
 * @param arr array to be sorted
 * @param size size of array
 */
void bubbleSort(int *arr, int size)
{
     f9c:	fd010113          	addi	sp,sp,-48
     fa0:	02112623          	sw	ra,44(sp)
     fa4:	02812423          	sw	s0,40(sp)
     fa8:	03010413          	addi	s0,sp,48
     fac:	fca42e23          	sw	a0,-36(s0)
     fb0:	fcb42c23          	sw	a1,-40(s0)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:42
    for (int i = 0; i < size - 1; i++)
     fb4:	fe042623          	sw	zero,-20(s0)
     fb8:	0b80006f          	j	1070 <bubbleSort+0xd4>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:44
    {                         /* for each array index */
        char swapped = 'f';
     fbc:	06600793          	li	a5,102
     fc0:	fef405a3          	sb	a5,-21(s0)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:48
    	//bool swapped = false; /* flag to check if any changes had to be made */
        /* perform iterations until no more changes were made or outer loop
            executed for all array indices */
        for (int j = 0; j < size - 1 - i; j++) { /* for each element in the array */
     fc4:	fe042223          	sw	zero,-28(s0)
     fc8:	0780006f          	j	1040 <bubbleSort+0xa4>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:49
            if (arr[j] > arr[j + 1]) { /* if the order of successive elements needs update */
     fcc:	fe442783          	lw	a5,-28(s0)
     fd0:	00279793          	slli	a5,a5,0x2
     fd4:	fdc42703          	lw	a4,-36(s0)
     fd8:	00f707b3          	add	a5,a4,a5
     fdc:	0007a703          	lw	a4,0(a5)
     fe0:	fe442783          	lw	a5,-28(s0)
     fe4:	00178793          	addi	a5,a5,1
     fe8:	00279793          	slli	a5,a5,0x2
     fec:	fdc42683          	lw	a3,-36(s0)
     ff0:	00f687b3          	add	a5,a3,a5
     ff4:	0007a783          	lw	a5,0(a5)
     ff8:	02e7de63          	bge	a5,a4,1034 <bubbleSort+0x98>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:50
                swap(&arr[j], &arr[j + 1]);
     ffc:	fe442783          	lw	a5,-28(s0)
    1000:	00279793          	slli	a5,a5,0x2
    1004:	fdc42703          	lw	a4,-36(s0)
    1008:	00f706b3          	add	a3,a4,a5
    100c:	fe442783          	lw	a5,-28(s0)
    1010:	00178793          	addi	a5,a5,1
    1014:	00279793          	slli	a5,a5,0x2
    1018:	fdc42703          	lw	a4,-36(s0)
    101c:	00f707b3          	add	a5,a4,a5
    1020:	00078593          	mv	a1,a5
    1024:	00068513          	mv	a0,a3
    1028:	f29ff0ef          	jal	ra,f50 <swap>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:51
                swapped = 't'; /* set flag */
    102c:	07400793          	li	a5,116
    1030:	fef405a3          	sb	a5,-21(s0)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:48 (discriminator 2)
        for (int j = 0; j < size - 1 - i; j++) { /* for each element in the array */
    1034:	fe442783          	lw	a5,-28(s0)
    1038:	00178793          	addi	a5,a5,1
    103c:	fef42223          	sw	a5,-28(s0)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:48 (discriminator 1)
    1040:	fd842783          	lw	a5,-40(s0)
    1044:	fff78713          	addi	a4,a5,-1
    1048:	fec42783          	lw	a5,-20(s0)
    104c:	40f707b3          	sub	a5,a4,a5
    1050:	fe442703          	lw	a4,-28(s0)
    1054:	f6f74ce3          	blt	a4,a5,fcc <bubbleSort+0x30>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:54
            }
        }
        if (swapped=='f') {
    1058:	feb40703          	lb	a4,-21(s0)
    105c:	06600793          	li	a5,102
    1060:	02f70263          	beq	a4,a5,1084 <bubbleSort+0xe8>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:42 (discriminator 2)
    for (int i = 0; i < size - 1; i++)
    1064:	fec42783          	lw	a5,-20(s0)
    1068:	00178793          	addi	a5,a5,1
    106c:	fef42623          	sw	a5,-20(s0)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:42 (discriminator 1)
    1070:	fd842783          	lw	a5,-40(s0)
    1074:	fff78793          	addi	a5,a5,-1
    1078:	fec42703          	lw	a4,-20(s0)
    107c:	f4f740e3          	blt	a4,a5,fbc <bubbleSort+0x20>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:60
            /* since no more updates we made, the array is already sorted
                this is an optimization for early termination */
            break;
        }
    }
}
    1080:	0080006f          	j	1088 <bubbleSort+0xec>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:57
            break;
    1084:	00000013          	nop
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:60
}
    1088:	00000013          	nop
    108c:	02c12083          	lw	ra,44(sp)
    1090:	02812403          	lw	s0,40(sp)
    1094:	03010113          	addi	sp,sp,48
    1098:	00008067          	ret

Disassembly of section .text.test:

0000109c <test>:
test():
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:65

/**
 * Test function
 */
void test(){
    109c:	fe010113          	addi	sp,sp,-32
    10a0:	00112e23          	sw	ra,28(sp)
    10a4:	00812c23          	sw	s0,24(sp)
    10a8:	02010413          	addi	s0,sp,32
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:66
    const int size = 10;
    10ac:	00a00793          	li	a5,10
    10b0:	fef42223          	sw	a5,-28(s0)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:67
    int *arr = (int *)calloc(size, sizeof(int));
    10b4:	fe442783          	lw	a5,-28(s0)
    10b8:	00400593          	li	a1,4
    10bc:	00078513          	mv	a0,a5
    10c0:	f41fe0ef          	jal	ra,0 <calloc>
    10c4:	00050793          	mv	a5,a0
    10c8:	fef42023          	sw	a5,-32(s0)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:70

    /* generate size random numbers from 0 to 100 */
    for (int i = 0; i < size; i++)
    10cc:	fe042623          	sw	zero,-20(s0)
    10d0:	0340006f          	j	1104 <test+0x68>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:72 (discriminator 3)
    {
        arr[i] = rand() % 100;
    10d4:	8c5ff0ef          	jal	ra,998 <rand>
    10d8:	00050693          	mv	a3,a0
    10dc:	fec42783          	lw	a5,-20(s0)
    10e0:	00279793          	slli	a5,a5,0x2
    10e4:	fe042703          	lw	a4,-32(s0)
    10e8:	00f707b3          	add	a5,a4,a5
    10ec:	06400713          	li	a4,100
    10f0:	02e6e733          	rem	a4,a3,a4
    10f4:	00e7a023          	sw	a4,0(a5)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:70 (discriminator 3)
    for (int i = 0; i < size; i++)
    10f8:	fec42783          	lw	a5,-20(s0)
    10fc:	00178793          	addi	a5,a5,1
    1100:	fef42623          	sw	a5,-20(s0)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:70 (discriminator 1)
    1104:	fec42703          	lw	a4,-20(s0)
    1108:	fe442783          	lw	a5,-28(s0)
    110c:	fcf744e3          	blt	a4,a5,10d4 <test+0x38>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:74
    }
    bubbleSort(arr, size);
    1110:	fe442583          	lw	a1,-28(s0)
    1114:	fe042503          	lw	a0,-32(s0)
    1118:	e85ff0ef          	jal	ra,f9c <bubbleSort>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:75
    for (int i = 0; i < size - 1; ++i)
    111c:	fe042423          	sw	zero,-24(s0)
    1120:	0400006f          	j	1160 <test+0xc4>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:78
    {
        //assert(arr[i] <= arr[i + 1]);
        if(!(arr[i] <= arr[i + 1])){
    1124:	fe842783          	lw	a5,-24(s0)
    1128:	00279793          	slli	a5,a5,0x2
    112c:	fe042703          	lw	a4,-32(s0)
    1130:	00f707b3          	add	a5,a4,a5
    1134:	0007a703          	lw	a4,0(a5)
    1138:	fe842783          	lw	a5,-24(s0)
    113c:	00178793          	addi	a5,a5,1
    1140:	00279793          	slli	a5,a5,0x2
    1144:	fe042683          	lw	a3,-32(s0)
    1148:	00f687b3          	add	a5,a3,a5
    114c:	0007a783          	lw	a5,0(a5)
    1150:	02e7c263          	blt	a5,a4,1174 <test+0xd8>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:75 (discriminator 2)
    for (int i = 0; i < size - 1; ++i)
    1154:	fe842783          	lw	a5,-24(s0)
    1158:	00178793          	addi	a5,a5,1
    115c:	fef42423          	sw	a5,-24(s0)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:75 (discriminator 1)
    1160:	fe442783          	lw	a5,-28(s0)
    1164:	fff78793          	addi	a5,a5,-1
    1168:	fe842703          	lw	a4,-24(s0)
    116c:	faf74ce3          	blt	a4,a5,1124 <test+0x88>
    1170:	0080006f          	j	1178 <test+0xdc>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:79
        	break;
    1174:	00000013          	nop
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:83
        	//ERROR
        }
    }
    free(arr);
    1178:	fe042503          	lw	a0,-32(s0)
    117c:	f5dfe0ef          	jal	ra,d8 <free>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:84
}
    1180:	00000013          	nop
    1184:	01c12083          	lw	ra,28(sp)
    1188:	01812403          	lw	s0,24(sp)
    118c:	02010113          	addi	sp,sp,32
    1190:	00008067          	ret

Disassembly of section .text.main:

00001194 <main>:
main():
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:88

/** Driver Code */
int main(int argc, const char *argv[])
{
    1194:	fe010113          	addi	sp,sp,-32
    1198:	00112e23          	sw	ra,28(sp)
    119c:	00812c23          	sw	s0,24(sp)
    11a0:	02010413          	addi	s0,sp,32
    11a4:	fea42623          	sw	a0,-20(s0)
    11a8:	feb42423          	sw	a1,-24(s0)
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:91
    /* Intializes random number generator */
    //srand(time(NULL));
    test();
    11ac:	ef1ff0ef          	jal	ra,109c <test>
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:92
    return 0;
    11b0:	00000793          	li	a5,0
C:\Users\Catalina\Documents\Universidad\1-2\FC2\Ensamblador\FC2practicasWS\pr4_lab\Debug/../pr4_lab.c:93
}
    11b4:	00078513          	mv	a0,a5
    11b8:	01c12083          	lw	ra,28(sp)
    11bc:	01812403          	lw	s0,24(sp)
    11c0:	02010113          	addi	sp,sp,32
    11c4:	00008067          	ret
