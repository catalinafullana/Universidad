
pr3_a.elf:     file format elf32-littleriscv
pr3_a.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010024

Program Header:
    LOAD off    0x00001000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x00000020 memsz 0x000000f4 flags rw-

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .data             00000020  00010000  00010000  00001000  2**0  CONTENTS, ALLOC, LOAD, DATA
  1 .bss              000000d4  00010020  00010020  00001020  2**0  ALLOC
  2 .riscv.attributes 0000001f  00000000  00000000  00001020  2**0  CONTENTS, READONLY
  3 .debug_line       0000014b  00000000  00000000  0000103f  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  4 .debug_info       00000026  00000000  00000000  0000118a  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev     00000014  00000000  00000000  000011b0  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges    00000020  00000000  00000000  000011c8  2**3  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_str        00000070  00000000  00000000  000011e8  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
00010000 l    d  .data	00000000 .data
00010020 l    d  .bss	00000000 .bss
00000000 l    d  .riscv.attributes	00000000 .riscv.attributes
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    df *ABS*	00000000 ./pr3_a.o
00000004 l       *ABS*	00000000 N
00010000 l       .data	00000000 A
00010010 l       .data	00000000 B
00010020 l       .bss	00000000 res
00010058 l       .bss	00000000 dot_prod
00010054 l       .bss	00000000 if
00010054 l       .bss	00000000 else
00010054 l       .bss	00000000 end
00010088 l       .bss	00000000 for
000100b8 l       .bss	00000000 fin_for
000100a4 l       .bss	00000000 nextiter
000100dc l       .bss	00000000 mul
000100e0 l       .bss	00000000 while
000100f0 l       .bss	00000000 end_while
00000000         *UND*	00000000 dot_prod2
00000000         *UND*	00000000 V
00010024 g       .bss	00000000 main


